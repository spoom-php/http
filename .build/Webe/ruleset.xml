<?xml version="1.0"?>
<ruleset name="Webe">
  <description>Webengine PHP Coding standard based on http://www.php-fig.org/psr/psr-2/</description>

  <!-- PHP code MUST use the long <?php ?> tags or the short-echo <?= ?> tags; it MUST NOT use the other tag variations. -->
  <rule ref="Generic.PHP.DisallowShortOpenTag.EchoFound">
    <severity>0</severity>
  </rule>

  <!-- PHP code MUST use only UTF-8 without BOM. -->
  <rule ref="Generic.Files.ByteOrderMark"/>

  <!-- A file SHOULD declare new symbols (classes, functions, constants, etc.) and cause no other side effects, or it SHOULD execute logic with side effects, but SHOULD NOT do both. -->
  <!-- checked in Files/SideEffectsSniff -->

  <!-- Namespaces and classes MUST follow PSR-0. This means each class is in a file by itself, and is in a namespace of at least one level: a top-level vendor name. -->
  <!-- checked in Classes/ClassDeclarationSniff -->

  <!-- Class names MUST be declared in StudlyCaps. -->
  <rule ref="Squiz.Classes.ValidClassName"/>

  <!-- Class constants MUST be declared in all upper case with underscore separators. -->
  <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>

  <!-- Method names MUST be declared in camelCase(). -->
  <!-- checked in Methods/CamelCaseMethodNameSniff -->

  <!-- All PHP files MUST use the Unix LF (linefeed) line ending. -->
  <rule ref="Generic.Files.LineEndings">
    <properties>
      <property name="eolChar" value="\n"/>
    </properties>
  </rule>

  <!-- All PHP files MUST end with a single blank line. -->
  <!-- checked in Files/EndFileNewlineSniff -->
  <!-- The closing `?>` tag MUST be omitted from files containing only PHP. -->
  <!-- checked in Files/ClosingTagSniff -->

  <!-- The soft limit on line length MUST be 160 characters; automated style checkers MUST warn but MUST NOT error at the soft limit. -->
  <rule ref="Generic.Files.LineLength">
    <properties>
      <property name="lineLimit" value="160"/>
      <property name="absoluteLineLimit" value="0"/>
    </properties>
  </rule>
  <!-- There MUST NOT be trailing whitespace at the end of non-blank lines. -->
  <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
    <properties>
      <property name="ignoreBlankLines" value="true"/>
    </properties>
  </rule>
  <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.StartFile">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EndFile">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines">
    <severity>0</severity>
  </rule>

  <!-- There MUST NOT be more than one statement per line. -->
  <rule ref="Generic.Formatting.DisallowMultipleStatements"/>
  <!-- Code MUST use an indent of 2 spaces, and MUST NOT use tabs for indenting. -->
  <rule ref="Generic.WhiteSpace.ScopeIndent">
    <properties>
      <property name="indent" value="2"/>
      <property name="ignoreIndentationTokens" type="array" value="T_COMMENT,T_DOC_COMMENT_OPEN_TAG"/>
    </properties>
  </rule>
  <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>

  <!-- PHP [keywords](http://php.net/manual/en/reserved.keywords.php) MUST be in lower case. -->
  <rule ref="Generic.PHP.LowerCaseKeyword"/>
  <!-- The PHP constants `true`, `false`, and `null` MUST be in lower case. -->
  <rule ref="Generic.PHP.LowerCaseConstant"/>

  <!-- When present, there MUST be one blank line after the `namespace` declaration. -->
  <!-- checked in Namespaces/NamespaceDeclaration -->
  <!-- When present, all `use` declarations MUST go after the `namespace` declaration. -->
  <!-- There MUST be one `use` keyword per declaration. -->
  <!-- There MUST be one blank line after the `use` block. -->
  <!-- checked in Namespaces/UseDeclarationSniff -->

  <!-- The `extends` and `implements` keywords MUST be declared on the same line as the class name. -->
  <!-- The opening brace for the class MUST go on the same line; the closing brace for the class MUST go on the next line after the body. -->
  <!-- Lists of `implements` MAY be split across multiple lines, where each subsequent line is indented once. When doing so, the first item in the list MUST be on the next line, and there MUST be only one interface per line. -->
  <!-- checked in Classes/ClassDeclarationSniff -->

  <!-- Visibility MUST be declared on all properties. -->
  <!-- The `var` keyword MUST NOT be used to declare a property. -->
  <!-- There MUST NOT be more than one property declared per statement. -->
  <!-- Property names SHOULD NOT be prefixed with a single underscore to indicate protected or private visibility. -->
  <!-- checked in Classes/PropertyDeclarationSniff -->

  <!-- Visibility MUST be declared on all methods. -->
  <rule ref="Squiz.Scope.MethodScope"/>
  <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>
  <!-- Method names SHOULD NOT be prefixed with a single underscore to indicate protected or private visibility. -->
  <!-- checked in Methods/MethodDeclarationSniff -->
  <!-- TODO Method names MUST NOT be declared with a space after the method name. The opening brace MUST go on the same line, and the closing brace MUST go on the next line following the body. There MUST be a space after the opening parenthesis, and there MUST be a space before the closing parenthesis. -->

  <!-- TODO In the argument list, there MUST NOT be a space before each comma, and there MUST be one space after each comma. -->
  <!-- Method arguments with default values MUST go at the end of the argument list. -->
  <rule ref="PEAR.Functions.ValidDefaultValue"/>
  <!-- TODO Argument lists MAY be split across multiple lines, where each subsequent line is indented once. When doing so, the first item in the list MUST be on the next line, and there MUST be only one argument per line. -->
  <!-- TODO When the argument list is split across multiple lines, the closing parenthesis and opening brace MUST be placed together on their own line with one space between them. -->
  <!-- When present, the `abstract`, `final` and `static` declarations MUST be after the visibility declaration. -->
  <!-- checked in Methods/MethodDeclarationSniff -->

  <!-- TODO When making a method or function call, there MUST NOT be a space between the method or function name and the opening parenthesis, there MUST be a space after the opening parenthesis, and there MUST be a space before the closing parenthesis. In the argument list, there MUST NOT be a space before each comma, and there MUST be one space after each comma. -->
  <!-- TODO Argument lists MAY be split across multiple lines, where each subsequent line is indented once. When doing so, the first item in the list MUST be on the next line, and there MUST be only one argument per line. -->

  <!-- TODO There MUST NOT be one space after the control structure keyword -->
  <!-- TODO There MUST be a space after the opening parenthesis -->
  <!-- TODO There MUST be a space before the closing parenthesis -->
  <!-- TODO There MUST be one space between the closing parenthesis and the opening brace -->
  <!-- The structure body MUST be indented once -->
  <!-- checked in WhiteSpace/ScopeIndent -->
  <!-- TODO The closing brace MUST be on the next line after the body -->
  <!-- TODO The body of each structure MAY be enclosed by braces. -->

  <!-- TODO The keyword `else if` SHOULD be used instead of `elseif`. -->

  <!-- TODO Closures MUST be declared without a space after the `function` keyword, and a space before and after the `use` keyword. -->
  <!-- TODO The opening brace MUST go on the same line, and the closing brace MUST go on the next line following the body. -->
  <!-- TODO There MUST be a space after the opening parenthesis of the argument list or variable list, and there MUST be a space before the closing parenthesis of the argument list or variable list. -->
  <!-- TODO In the argument list and variable list, there MUST NOT be a space before each comma, and there MUST be one space after each comma. -->
  <!-- TODO Closure arguments with default values MUST go at the end of the argument list. -->

  <!-- TODO Argument lists and variable lists MAY be split across multiple lines, where each subsequent line is indented once. When doing so, the first item in the list MUST be on the next line, and there MUST be only one argument or variable per line. -->
  <!-- TODO When the ending list (whether or arguments or variables) is split across multiple lines, the closing parenthesis and opening brace MUST be placed together on their own line with one space between them. The following are examples of closures with and without argument lists and variable lists split across multiple lines. -->

</ruleset>
